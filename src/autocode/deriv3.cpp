/*
 * Copyright (C) 2013-  Qiming Sun <osirpt.sun@gmail.com>
 * Description: code generated by  gen-code.cl
 */
#include <stdlib.h>
#include <complex>
using namespace std::literals;
#include "cint_bas.hpp"
#include "cart2sph.hpp"
#include "g1e.hpp"
#include "g2e.hpp"
#include "optimizer.hpp"
#include "cint1e.hpp"
#include "cint2e.hpp"
#include "misc.hpp"
#include "c2f.hpp"
/* <NABLA NABLA NABLA i|NUC |j> */
void CINTgout1e_int1e_ipipipnuc(double *gout, double *g, int *idx, CINTEnvVars *envs, int gout_empty) {
int nf = envs->nf;
int ix, iy, iz, n;
double *g0 = g;
double *g1 = g0 + envs->g_size * 3;
double *g2 = g1 + envs->g_size * 3;
double *g3 = g2 + envs->g_size * 3;
double *g4 = g3 + envs->g_size * 3;
double *g5 = g4 + envs->g_size * 3;
double *g6 = g5 + envs->g_size * 3;
double *g7 = g6 + envs->g_size * 3;
double s[27];
G1E_D_I(g1, g0, envs->i_l+2, envs->j_l, 0);
G1E_D_I(g2, g0, envs->i_l+1, envs->j_l, 0);
G1E_D_I(g3, g1, envs->i_l+1, envs->j_l, 0);
G1E_D_I(g4, g0, envs->i_l+0, envs->j_l, 0);
G1E_D_I(g5, g1, envs->i_l+0, envs->j_l, 0);
G1E_D_I(g6, g2, envs->i_l+0, envs->j_l, 0);
G1E_D_I(g7, g3, envs->i_l+0, envs->j_l, 0);
for (n = 0; n < nf; n++) {
ix = idx[0+n*3];
iy = idx[1+n*3];
iz = idx[2+n*3];
s[0] = + g7[ix+0]*g0[iy+0]*g0[iz+0];
s[1] = + g6[ix+0]*g1[iy+0]*g0[iz+0];
s[2] = + g6[ix+0]*g0[iy+0]*g1[iz+0];
s[3] = + g5[ix+0]*g2[iy+0]*g0[iz+0];
s[4] = + g4[ix+0]*g3[iy+0]*g0[iz+0];
s[5] = + g4[ix+0]*g2[iy+0]*g1[iz+0];
s[6] = + g5[ix+0]*g0[iy+0]*g2[iz+0];
s[7] = + g4[ix+0]*g1[iy+0]*g2[iz+0];
s[8] = + g4[ix+0]*g0[iy+0]*g3[iz+0];
s[9] = + g3[ix+0]*g4[iy+0]*g0[iz+0];
s[10] = + g2[ix+0]*g5[iy+0]*g0[iz+0];
s[11] = + g2[ix+0]*g4[iy+0]*g1[iz+0];
s[12] = + g1[ix+0]*g6[iy+0]*g0[iz+0];
s[13] = + g0[ix+0]*g7[iy+0]*g0[iz+0];
s[14] = + g0[ix+0]*g6[iy+0]*g1[iz+0];
s[15] = + g1[ix+0]*g4[iy+0]*g2[iz+0];
s[16] = + g0[ix+0]*g5[iy+0]*g2[iz+0];
s[17] = + g0[ix+0]*g4[iy+0]*g3[iz+0];
s[18] = + g3[ix+0]*g0[iy+0]*g4[iz+0];
s[19] = + g2[ix+0]*g1[iy+0]*g4[iz+0];
s[20] = + g2[ix+0]*g0[iy+0]*g5[iz+0];
s[21] = + g1[ix+0]*g2[iy+0]*g4[iz+0];
s[22] = + g0[ix+0]*g3[iy+0]*g4[iz+0];
s[23] = + g0[ix+0]*g2[iy+0]*g5[iz+0];
s[24] = + g1[ix+0]*g0[iy+0]*g6[iz+0];
s[25] = + g0[ix+0]*g1[iy+0]*g6[iz+0];
s[26] = + g0[ix+0]*g0[iy+0]*g7[iz+0];
gout[n*27+0] += + s[0];
gout[n*27+1] += + s[9];
gout[n*27+2] += + s[18];
gout[n*27+3] += + s[3];
gout[n*27+4] += + s[12];
gout[n*27+5] += + s[21];
gout[n*27+6] += + s[6];
gout[n*27+7] += + s[15];
gout[n*27+8] += + s[24];
gout[n*27+9] += + s[1];
gout[n*27+10] += + s[10];
gout[n*27+11] += + s[19];
gout[n*27+12] += + s[4];
gout[n*27+13] += + s[13];
gout[n*27+14] += + s[22];
gout[n*27+15] += + s[7];
gout[n*27+16] += + s[16];
gout[n*27+17] += + s[25];
gout[n*27+18] += + s[2];
gout[n*27+19] += + s[11];
gout[n*27+20] += + s[20];
gout[n*27+21] += + s[5];
gout[n*27+22] += + s[14];
gout[n*27+23] += + s[23];
gout[n*27+24] += + s[8];
gout[n*27+25] += + s[17];
gout[n*27+26] += + s[26];
}}
void int1e_ipipipnuc_optimizer(CINTOpt **opt, int *atm, int natm, int *bas, int nbas, double *env) {
int ng[] = {3, 0, 0, 0, 3, 1, 0, 27};
CINTall_1e_optimizer(opt, ng, atm, natm, bas, nbas, env);
}
int int1e_ipipipnuc_cart(double *out, int *dims, int *shls,
int *atm, int natm, int *bas, int nbas, double *env, CINTOpt *opt) {
int ng[] = {3, 0, 0, 0, 3, 1, 0, 27};
CINTEnvVars envs;
CINTinit_int1e_EnvVars(&envs, ng, shls, atm, natm, bas, nbas, env);
envs.f_gout = &CINTgout1e_int1e_ipipipnuc;
return CINT1e_drv(out, dims, &envs, &c2s_cart_1e, 2);
} // int1e_ipipipnuc_cart
int int1e_ipipipnuc_sph(double *out, int *dims, int *shls,
int *atm, int natm, int *bas, int nbas, double *env, CINTOpt *opt) {
int ng[] = {3, 0, 0, 0, 3, 1, 0, 27};
CINTEnvVars envs;
CINTinit_int1e_EnvVars(&envs, ng, shls, atm, natm, bas, nbas, env);
envs.f_gout = &CINTgout1e_int1e_ipipipnuc;
return CINT1e_drv(out, dims, &envs, &c2s_sph_1e, 2);
} // int1e_ipipipnuc_sph
int int1e_ipipipnuc_spinor(std::complex<double> *out, int *dims, int *shls,
int *atm, int natm, int *bas, int nbas, double *env, CINTOpt *opt) {
int ng[] = {3, 0, 0, 0, 3, 1, 0, 27};
CINTEnvVars envs;
CINTinit_int1e_EnvVars(&envs, ng, shls, atm, natm, bas, nbas, env);
envs.f_gout = &CINTgout1e_int1e_ipipipnuc;
return CINT1e_spinor_drv(out, dims, &envs, &c2s_sf_1e, 2);
} // int1e_ipipipnuc_spinor
ALL_CINT1E(int1e_ipipipnuc)
ALL_CINT1E_FORTRAN_(int1e_ipipipnuc)
/* <NABLA NABLA NABLA i|RINV |j> */
void CINTgout1e_int1e_ipipiprinv(double *gout, double *g, int *idx, CINTEnvVars *envs, int gout_empty) {
int nf = envs->nf;
int ix, iy, iz, n;
double *g0 = g;
double *g1 = g0 + envs->g_size * 3;
double *g2 = g1 + envs->g_size * 3;
double *g3 = g2 + envs->g_size * 3;
double *g4 = g3 + envs->g_size * 3;
double *g5 = g4 + envs->g_size * 3;
double *g6 = g5 + envs->g_size * 3;
double *g7 = g6 + envs->g_size * 3;
double s[27];
G1E_D_I(g1, g0, envs->i_l+2, envs->j_l, 0);
G1E_D_I(g2, g0, envs->i_l+1, envs->j_l, 0);
G1E_D_I(g3, g1, envs->i_l+1, envs->j_l, 0);
G1E_D_I(g4, g0, envs->i_l+0, envs->j_l, 0);
G1E_D_I(g5, g1, envs->i_l+0, envs->j_l, 0);
G1E_D_I(g6, g2, envs->i_l+0, envs->j_l, 0);
G1E_D_I(g7, g3, envs->i_l+0, envs->j_l, 0);
for (n = 0; n < nf; n++) {
ix = idx[0+n*3];
iy = idx[1+n*3];
iz = idx[2+n*3];
s[0] = + g7[ix+0]*g0[iy+0]*g0[iz+0];
s[1] = + g6[ix+0]*g1[iy+0]*g0[iz+0];
s[2] = + g6[ix+0]*g0[iy+0]*g1[iz+0];
s[3] = + g5[ix+0]*g2[iy+0]*g0[iz+0];
s[4] = + g4[ix+0]*g3[iy+0]*g0[iz+0];
s[5] = + g4[ix+0]*g2[iy+0]*g1[iz+0];
s[6] = + g5[ix+0]*g0[iy+0]*g2[iz+0];
s[7] = + g4[ix+0]*g1[iy+0]*g2[iz+0];
s[8] = + g4[ix+0]*g0[iy+0]*g3[iz+0];
s[9] = + g3[ix+0]*g4[iy+0]*g0[iz+0];
s[10] = + g2[ix+0]*g5[iy+0]*g0[iz+0];
s[11] = + g2[ix+0]*g4[iy+0]*g1[iz+0];
s[12] = + g1[ix+0]*g6[iy+0]*g0[iz+0];
s[13] = + g0[ix+0]*g7[iy+0]*g0[iz+0];
s[14] = + g0[ix+0]*g6[iy+0]*g1[iz+0];
s[15] = + g1[ix+0]*g4[iy+0]*g2[iz+0];
s[16] = + g0[ix+0]*g5[iy+0]*g2[iz+0];
s[17] = + g0[ix+0]*g4[iy+0]*g3[iz+0];
s[18] = + g3[ix+0]*g0[iy+0]*g4[iz+0];
s[19] = + g2[ix+0]*g1[iy+0]*g4[iz+0];
s[20] = + g2[ix+0]*g0[iy+0]*g5[iz+0];
s[21] = + g1[ix+0]*g2[iy+0]*g4[iz+0];
s[22] = + g0[ix+0]*g3[iy+0]*g4[iz+0];
s[23] = + g0[ix+0]*g2[iy+0]*g5[iz+0];
s[24] = + g1[ix+0]*g0[iy+0]*g6[iz+0];
s[25] = + g0[ix+0]*g1[iy+0]*g6[iz+0];
s[26] = + g0[ix+0]*g0[iy+0]*g7[iz+0];
gout[n*27+0] += + s[0];
gout[n*27+1] += + s[9];
gout[n*27+2] += + s[18];
gout[n*27+3] += + s[3];
gout[n*27+4] += + s[12];
gout[n*27+5] += + s[21];
gout[n*27+6] += + s[6];
gout[n*27+7] += + s[15];
gout[n*27+8] += + s[24];
gout[n*27+9] += + s[1];
gout[n*27+10] += + s[10];
gout[n*27+11] += + s[19];
gout[n*27+12] += + s[4];
gout[n*27+13] += + s[13];
gout[n*27+14] += + s[22];
gout[n*27+15] += + s[7];
gout[n*27+16] += + s[16];
gout[n*27+17] += + s[25];
gout[n*27+18] += + s[2];
gout[n*27+19] += + s[11];
gout[n*27+20] += + s[20];
gout[n*27+21] += + s[5];
gout[n*27+22] += + s[14];
gout[n*27+23] += + s[23];
gout[n*27+24] += + s[8];
gout[n*27+25] += + s[17];
gout[n*27+26] += + s[26];
}}
void int1e_ipipiprinv_optimizer(CINTOpt **opt, int *atm, int natm, int *bas, int nbas, double *env) {
int ng[] = {3, 0, 0, 0, 3, 1, 0, 27};
CINTall_1e_optimizer(opt, ng, atm, natm, bas, nbas, env);
}
int int1e_ipipiprinv_cart(double *out, int *dims, int *shls,
int *atm, int natm, int *bas, int nbas, double *env, CINTOpt *opt) {
int ng[] = {3, 0, 0, 0, 3, 1, 0, 27};
CINTEnvVars envs;
CINTinit_int1e_EnvVars(&envs, ng, shls, atm, natm, bas, nbas, env);
envs.f_gout = &CINTgout1e_int1e_ipipiprinv;
return CINT1e_drv(out, dims, &envs, &c2s_cart_1e, 1);
} // int1e_ipipiprinv_cart
int int1e_ipipiprinv_sph(double *out, int *dims, int *shls,
int *atm, int natm, int *bas, int nbas, double *env, CINTOpt *opt) {
int ng[] = {3, 0, 0, 0, 3, 1, 0, 27};
CINTEnvVars envs;
CINTinit_int1e_EnvVars(&envs, ng, shls, atm, natm, bas, nbas, env);
envs.f_gout = &CINTgout1e_int1e_ipipiprinv;
return CINT1e_drv(out, dims, &envs, &c2s_sph_1e, 1);
} // int1e_ipipiprinv_sph
int int1e_ipipiprinv_spinor(std::complex<double> *out, int *dims, int *shls,
int *atm, int natm, int *bas, int nbas, double *env, CINTOpt *opt) {
int ng[] = {3, 0, 0, 0, 3, 1, 0, 27};
CINTEnvVars envs;
CINTinit_int1e_EnvVars(&envs, ng, shls, atm, natm, bas, nbas, env);
envs.f_gout = &CINTgout1e_int1e_ipipiprinv;
return CINT1e_spinor_drv(out, dims, &envs, &c2s_sf_1e, 1);
} // int1e_ipipiprinv_spinor
ALL_CINT1E(int1e_ipipiprinv)
ALL_CINT1E_FORTRAN_(int1e_ipipiprinv)
/* <NABLA NABLA i|NUC |NABLA j> */
void CINTgout1e_int1e_ipipnucip(double *gout, double *g, int *idx, CINTEnvVars *envs, int gout_empty) {
int nf = envs->nf;
int ix, iy, iz, n;
double *g0 = g;
double *g1 = g0 + envs->g_size * 3;
double *g2 = g1 + envs->g_size * 3;
double *g3 = g2 + envs->g_size * 3;
double *g4 = g3 + envs->g_size * 3;
double *g5 = g4 + envs->g_size * 3;
double *g6 = g5 + envs->g_size * 3;
double *g7 = g6 + envs->g_size * 3;
double s[27];
G1E_D_J(g1, g0, envs->i_l+2, envs->j_l+0, 0);
G1E_D_I(g2, g0, envs->i_l+1, envs->j_l, 0);
G1E_D_I(g3, g1, envs->i_l+1, envs->j_l, 0);
G1E_D_I(g4, g0, envs->i_l+0, envs->j_l, 0);
G1E_D_I(g5, g1, envs->i_l+0, envs->j_l, 0);
G1E_D_I(g6, g2, envs->i_l+0, envs->j_l, 0);
G1E_D_I(g7, g3, envs->i_l+0, envs->j_l, 0);
for (n = 0; n < nf; n++) {
ix = idx[0+n*3];
iy = idx[1+n*3];
iz = idx[2+n*3];
s[0] = + g7[ix+0]*g0[iy+0]*g0[iz+0];
s[1] = + g6[ix+0]*g1[iy+0]*g0[iz+0];
s[2] = + g6[ix+0]*g0[iy+0]*g1[iz+0];
s[3] = + g5[ix+0]*g2[iy+0]*g0[iz+0];
s[4] = + g4[ix+0]*g3[iy+0]*g0[iz+0];
s[5] = + g4[ix+0]*g2[iy+0]*g1[iz+0];
s[6] = + g5[ix+0]*g0[iy+0]*g2[iz+0];
s[7] = + g4[ix+0]*g1[iy+0]*g2[iz+0];
s[8] = + g4[ix+0]*g0[iy+0]*g3[iz+0];
s[9] = + g3[ix+0]*g4[iy+0]*g0[iz+0];
s[10] = + g2[ix+0]*g5[iy+0]*g0[iz+0];
s[11] = + g2[ix+0]*g4[iy+0]*g1[iz+0];
s[12] = + g1[ix+0]*g6[iy+0]*g0[iz+0];
s[13] = + g0[ix+0]*g7[iy+0]*g0[iz+0];
s[14] = + g0[ix+0]*g6[iy+0]*g1[iz+0];
s[15] = + g1[ix+0]*g4[iy+0]*g2[iz+0];
s[16] = + g0[ix+0]*g5[iy+0]*g2[iz+0];
s[17] = + g0[ix+0]*g4[iy+0]*g3[iz+0];
s[18] = + g3[ix+0]*g0[iy+0]*g4[iz+0];
s[19] = + g2[ix+0]*g1[iy+0]*g4[iz+0];
s[20] = + g2[ix+0]*g0[iy+0]*g5[iz+0];
s[21] = + g1[ix+0]*g2[iy+0]*g4[iz+0];
s[22] = + g0[ix+0]*g3[iy+0]*g4[iz+0];
s[23] = + g0[ix+0]*g2[iy+0]*g5[iz+0];
s[24] = + g1[ix+0]*g0[iy+0]*g6[iz+0];
s[25] = + g0[ix+0]*g1[iy+0]*g6[iz+0];
s[26] = + g0[ix+0]*g0[iy+0]*g7[iz+0];
gout[n*27+0] += + s[0];
gout[n*27+1] += + s[1];
gout[n*27+2] += + s[2];
gout[n*27+3] += + s[9];
gout[n*27+4] += + s[10];
gout[n*27+5] += + s[11];
gout[n*27+6] += + s[18];
gout[n*27+7] += + s[19];
gout[n*27+8] += + s[20];
gout[n*27+9] += + s[3];
gout[n*27+10] += + s[4];
gout[n*27+11] += + s[5];
gout[n*27+12] += + s[12];
gout[n*27+13] += + s[13];
gout[n*27+14] += + s[14];
gout[n*27+15] += + s[21];
gout[n*27+16] += + s[22];
gout[n*27+17] += + s[23];
gout[n*27+18] += + s[6];
gout[n*27+19] += + s[7];
gout[n*27+20] += + s[8];
gout[n*27+21] += + s[15];
gout[n*27+22] += + s[16];
gout[n*27+23] += + s[17];
gout[n*27+24] += + s[24];
gout[n*27+25] += + s[25];
gout[n*27+26] += + s[26];
}}
void int1e_ipipnucip_optimizer(CINTOpt **opt, int *atm, int natm, int *bas, int nbas, double *env) {
int ng[] = {2, 1, 0, 0, 3, 1, 0, 27};
CINTall_1e_optimizer(opt, ng, atm, natm, bas, nbas, env);
}
int int1e_ipipnucip_cart(double *out, int *dims, int *shls,
int *atm, int natm, int *bas, int nbas, double *env, CINTOpt *opt) {
int ng[] = {2, 1, 0, 0, 3, 1, 0, 27};
CINTEnvVars envs;
CINTinit_int1e_EnvVars(&envs, ng, shls, atm, natm, bas, nbas, env);
envs.f_gout = &CINTgout1e_int1e_ipipnucip;
return CINT1e_drv(out, dims, &envs, &c2s_cart_1e, 2);
} // int1e_ipipnucip_cart
int int1e_ipipnucip_sph(double *out, int *dims, int *shls,
int *atm, int natm, int *bas, int nbas, double *env, CINTOpt *opt) {
int ng[] = {2, 1, 0, 0, 3, 1, 0, 27};
CINTEnvVars envs;
CINTinit_int1e_EnvVars(&envs, ng, shls, atm, natm, bas, nbas, env);
envs.f_gout = &CINTgout1e_int1e_ipipnucip;
return CINT1e_drv(out, dims, &envs, &c2s_sph_1e, 2);
} // int1e_ipipnucip_sph
int int1e_ipipnucip_spinor(std::complex<double> *out, int *dims, int *shls,
int *atm, int natm, int *bas, int nbas, double *env, CINTOpt *opt) {
int ng[] = {2, 1, 0, 0, 3, 1, 0, 27};
CINTEnvVars envs;
CINTinit_int1e_EnvVars(&envs, ng, shls, atm, natm, bas, nbas, env);
envs.f_gout = &CINTgout1e_int1e_ipipnucip;
return CINT1e_spinor_drv(out, dims, &envs, &c2s_sf_1e, 2);
} // int1e_ipipnucip_spinor
ALL_CINT1E(int1e_ipipnucip)
ALL_CINT1E_FORTRAN_(int1e_ipipnucip)
/* <NABLA NABLA i|RINV |NABLA j> */
void CINTgout1e_int1e_ipiprinvip(double *gout, double *g, int *idx, CINTEnvVars *envs, int gout_empty) {
int nf = envs->nf;
int ix, iy, iz, n;
double *g0 = g;
double *g1 = g0 + envs->g_size * 3;
double *g2 = g1 + envs->g_size * 3;
double *g3 = g2 + envs->g_size * 3;
double *g4 = g3 + envs->g_size * 3;
double *g5 = g4 + envs->g_size * 3;
double *g6 = g5 + envs->g_size * 3;
double *g7 = g6 + envs->g_size * 3;
double s[27];
G1E_D_J(g1, g0, envs->i_l+2, envs->j_l+0, 0);
G1E_D_I(g2, g0, envs->i_l+1, envs->j_l, 0);
G1E_D_I(g3, g1, envs->i_l+1, envs->j_l, 0);
G1E_D_I(g4, g0, envs->i_l+0, envs->j_l, 0);
G1E_D_I(g5, g1, envs->i_l+0, envs->j_l, 0);
G1E_D_I(g6, g2, envs->i_l+0, envs->j_l, 0);
G1E_D_I(g7, g3, envs->i_l+0, envs->j_l, 0);
for (n = 0; n < nf; n++) {
ix = idx[0+n*3];
iy = idx[1+n*3];
iz = idx[2+n*3];
s[0] = + g7[ix+0]*g0[iy+0]*g0[iz+0];
s[1] = + g6[ix+0]*g1[iy+0]*g0[iz+0];
s[2] = + g6[ix+0]*g0[iy+0]*g1[iz+0];
s[3] = + g5[ix+0]*g2[iy+0]*g0[iz+0];
s[4] = + g4[ix+0]*g3[iy+0]*g0[iz+0];
s[5] = + g4[ix+0]*g2[iy+0]*g1[iz+0];
s[6] = + g5[ix+0]*g0[iy+0]*g2[iz+0];
s[7] = + g4[ix+0]*g1[iy+0]*g2[iz+0];
s[8] = + g4[ix+0]*g0[iy+0]*g3[iz+0];
s[9] = + g3[ix+0]*g4[iy+0]*g0[iz+0];
s[10] = + g2[ix+0]*g5[iy+0]*g0[iz+0];
s[11] = + g2[ix+0]*g4[iy+0]*g1[iz+0];
s[12] = + g1[ix+0]*g6[iy+0]*g0[iz+0];
s[13] = + g0[ix+0]*g7[iy+0]*g0[iz+0];
s[14] = + g0[ix+0]*g6[iy+0]*g1[iz+0];
s[15] = + g1[ix+0]*g4[iy+0]*g2[iz+0];
s[16] = + g0[ix+0]*g5[iy+0]*g2[iz+0];
s[17] = + g0[ix+0]*g4[iy+0]*g3[iz+0];
s[18] = + g3[ix+0]*g0[iy+0]*g4[iz+0];
s[19] = + g2[ix+0]*g1[iy+0]*g4[iz+0];
s[20] = + g2[ix+0]*g0[iy+0]*g5[iz+0];
s[21] = + g1[ix+0]*g2[iy+0]*g4[iz+0];
s[22] = + g0[ix+0]*g3[iy+0]*g4[iz+0];
s[23] = + g0[ix+0]*g2[iy+0]*g5[iz+0];
s[24] = + g1[ix+0]*g0[iy+0]*g6[iz+0];
s[25] = + g0[ix+0]*g1[iy+0]*g6[iz+0];
s[26] = + g0[ix+0]*g0[iy+0]*g7[iz+0];
gout[n*27+0] += + s[0];
gout[n*27+1] += + s[1];
gout[n*27+2] += + s[2];
gout[n*27+3] += + s[9];
gout[n*27+4] += + s[10];
gout[n*27+5] += + s[11];
gout[n*27+6] += + s[18];
gout[n*27+7] += + s[19];
gout[n*27+8] += + s[20];
gout[n*27+9] += + s[3];
gout[n*27+10] += + s[4];
gout[n*27+11] += + s[5];
gout[n*27+12] += + s[12];
gout[n*27+13] += + s[13];
gout[n*27+14] += + s[14];
gout[n*27+15] += + s[21];
gout[n*27+16] += + s[22];
gout[n*27+17] += + s[23];
gout[n*27+18] += + s[6];
gout[n*27+19] += + s[7];
gout[n*27+20] += + s[8];
gout[n*27+21] += + s[15];
gout[n*27+22] += + s[16];
gout[n*27+23] += + s[17];
gout[n*27+24] += + s[24];
gout[n*27+25] += + s[25];
gout[n*27+26] += + s[26];
}}
void int1e_ipiprinvip_optimizer(CINTOpt **opt, int *atm, int natm, int *bas, int nbas, double *env) {
int ng[] = {2, 1, 0, 0, 3, 1, 0, 27};
CINTall_1e_optimizer(opt, ng, atm, natm, bas, nbas, env);
}
int int1e_ipiprinvip_cart(double *out, int *dims, int *shls,
int *atm, int natm, int *bas, int nbas, double *env, CINTOpt *opt) {
int ng[] = {2, 1, 0, 0, 3, 1, 0, 27};
CINTEnvVars envs;
CINTinit_int1e_EnvVars(&envs, ng, shls, atm, natm, bas, nbas, env);
envs.f_gout = &CINTgout1e_int1e_ipiprinvip;
return CINT1e_drv(out, dims, &envs, &c2s_cart_1e, 1);
} // int1e_ipiprinvip_cart
int int1e_ipiprinvip_sph(double *out, int *dims, int *shls,
int *atm, int natm, int *bas, int nbas, double *env, CINTOpt *opt) {
int ng[] = {2, 1, 0, 0, 3, 1, 0, 27};
CINTEnvVars envs;
CINTinit_int1e_EnvVars(&envs, ng, shls, atm, natm, bas, nbas, env);
envs.f_gout = &CINTgout1e_int1e_ipiprinvip;
return CINT1e_drv(out, dims, &envs, &c2s_sph_1e, 1);
} // int1e_ipiprinvip_sph
int int1e_ipiprinvip_spinor(std::complex<double> *out, int *dims, int *shls,
int *atm, int natm, int *bas, int nbas, double *env, CINTOpt *opt) {
int ng[] = {2, 1, 0, 0, 3, 1, 0, 27};
CINTEnvVars envs;
CINTinit_int1e_EnvVars(&envs, ng, shls, atm, natm, bas, nbas, env);
envs.f_gout = &CINTgout1e_int1e_ipiprinvip;
return CINT1e_spinor_drv(out, dims, &envs, &c2s_sf_1e, 1);
} // int1e_ipiprinvip_spinor
ALL_CINT1E(int1e_ipiprinvip)
ALL_CINT1E_FORTRAN_(int1e_ipiprinvip)
